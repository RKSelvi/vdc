{
    "Organization": "env(ORGANIZATION_NAME)",
    "DeploymentName": "vdcvdi",
    "InstanceName": "${Parameters.Organization}-${Parameters.DeploymentName}",
    "Subscription": "VDCVDI",
    "Location": "env(AZURE_LOCATION)",
    "StorageBlobUrl": "env(AZURE_STORAGE_BLOB_URL)",
    "ModuleConfigurationParameters": {
        "SharedServices": {
            "DeploymentName": "shrdsvcs",
            "ActiveDirectory": {
                "VmIpAddressStart": [ "172.0.0.10" ]
            },
            "VirtualNetworkHUB": {
                "Id": "/subscriptions/${Subscriptions.VDCVDI.SubscriptionId}/resourceGroups/${Parameters.ModuleConfigurationParameters.SharedServices.VirtualNetworkHUB.ResourceGroupName}/providers/Microsoft.Network/virtualNetworks/${Parameters.ModuleConfigurationParameters.SharedServices.VirtualNetworkHUB.Name}",
                "Name": "${Parameters.InstanceName}-HUB",
                "ResourceGroupName": "${Parameters.InstanceName}-hubnetwork-rg",
                "AddressPrefix": "172.0.0.0/16",
                "NetworkVirtualAppliance": {
                    "AzureFirewall": {
                        "Name": "${Parameters.Organization}-${Parameters.ModuleConfigurationParameters.SharedServices.DeploymentName}-hbazfw"
                    }
                }
            },
            "VirtualNetworkSPOKE": {
                "Id": "/subscriptions/${Subscriptions.VDCVDI.SubscriptionId}/resourceGroups/${Parameters.ModuleConfigurationParameters.SharedServices.VirtualNetworkSPOKE.ResourceGroupName}/providers/Microsoft.Network/virtualNetworks/${Parameters.ModuleConfigurationParameters.SharedServices.VirtualNetworkSPOKE.Name}",
                "Name": "${Parameters.InstanceName}-SPOKE",
                "ResourceGroupName": "${Parameters.InstanceName}-spokenetwork-rg",
                "AddressPrefixes": "172.50.0.0/16",
                "NetworkVirtualAppliance": {
                    "AzureFirewall": {
                        "Name": "${Parameters.Organization}-${Parameters.ModuleConfigurationParameters.SharedServices.DeploymentName}-spazfw"
                    }
                }
            }
        },
        "OnPremisesInformation": {
            "InstanceName": "${Parameters.InstanceName}",
            "Comments": "This InstanceName is a temporal value, this value is used in artifactsStorageAccount.json, the idea is to have a global set of services and this name should point to the InstanceName (deployment name) of the global services archetype"
        },
        "KeyVaultManagementUserId": "env(KEYVAULT_MANAGEMENT_USER_ID)",
        "DevOpsServicePrincipalId": "env(DEVOPS_SERVICE_PRINCIPAL_USER_ID)",
        "VirtualNetworkHUB": {            
            "Name": "${Parameters.InstanceName}-HUB",
            "ResourceGroup": "${Parameters.InstanceName}-hubnetwork-rg",
            "AddressPrefixes": ["172.0.0.0/16"],            
            "EnableDdosProtection": false,
            "EnableVmProtection": false,
            "Subnets": [
                {
                    "name": "shrdsvcs",
                    "addressPrefix": "172.0.0.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": [
                        {
                            "service": "Microsoft.EventHub"
                        },
                        {
                            "service": "Microsoft.Sql"
                        },
                        {
                            "service": "Microsoft.Storage"
                        },
                        {
                            "service": "Microsoft.KeyVault"
                        }
                    ]
                },
                {
                    "name": "AppGateway",
                    "addressPrefix": "172.0.1.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                },
                {
                    "name": "AzureFirewallSubnet",
                    "addressPrefix": "172.0.2.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                },
                {
                    "name": "GatewaySubnet",
                    "addressPrefix": "172.0.3.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                }
            ],
            "DnsServers": [                
            ]
        },
        "VirtualNetworkSPOKE": {            
            "Name": "${Parameters.InstanceName}-SPOKE",
            "ResourceGroup": "${Parameters.InstanceName}-spokenetwork-rg",
            "AddressPrefixes": [ "172.50.0.0/16" ],
            "EnableDdosProtection": false,
            "EnableVmProtection": false,
            "Subnets": [
                {
                    "name": "spokeshrdsvcs",
                    "addressPrefix": "172.50.1.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": [
                        {
                            "service": "Microsoft.EventHub"
                        },
                        {
                            "service": "Microsoft.Sql"
                        },
                        {
                            "service": "Microsoft.Storage"
                        },
                        {
                            "service": "Microsoft.KeyVault"
                        }
                    ]
                },
                {
                    "name": "GatewaySubnet",
                    "addressPrefix": "172.50.2.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                },
                {
                    "name": "AccessLayerSubnet",
                    "addressPrefix": "172.50.3.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                }
                ,
                {
                    "name": "ResourceLayerSubnet",
                    "addressPrefix": "172.50.4.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                },
                {
                    "name": "ControlLayerSubnet",
                    "addressPrefix": "172.50.5.0/28",
                    "networkSecurityGroupName": "",
                    "routeTableName": "",
                    "serviceEndpoints": []
                }         
            ],
            "DnsServers": [
                "${Parameters.ModuleConfigurationParameters.ActiveDirectory.PrimaryDomainControllerIP}"
            ]
        },       
        "VirtualNetworkPeering": {
            "LocalPeering": {
                "Name": "${Parameters.DeploymentName}-to-sharedsvcs"
            }
        },
        "ApplicationSecurityGroups": {
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.VirtualNetworkSPOKE.ResourceGroup}",
            "Jumpbox": {
                "Name": "jumpbox-asg"
            },
            "DomainController": {
                "Name": "dc-asg"
            }
        },
        "NetworkSecurityGroups": {
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.VirtualNetworkHUB.ResourceGroup}",
            "Comments": "Virtual Network (TCP and UDP) to Application Security Group rules are required for DNS resolution",
            "SharedServices": {
                "Name": "${Parameters.DeploymentName}-nsg",
                "Rules": [
                    {
                    }
                ]
            }
        },
        "RouteTables": {
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.VirtualNetworkHUB.ResourceGroup}",
            "SharedServices": {
                "Name": "${Parameters.DeploymentName}-udr",
                "Routes": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopIpAddress": "reference(AzureFirewall.azureFirewallPrivateIp)",
                            "nextHopType": "VirtualAppliance"
                        }
                    }
                ]
            }
        },
        "DiagnosticStorageAccount": {
            "Name": "${Parameters.Organization}${Parameters.DeploymentName}diag01",
            "ResourceGroup": "${Parameters.InstanceName}-diagnostics-rg",
            "Location": "${Parameters.Location}",
            "Sku": "Standard_GRS",
            "NetworkAcls": {
                "bypass": "AzureServices",
                "defaultAction": "Deny",
                "virtualNetworkRules": [
                    {
                        "subnet": "${Parameters.ModuleConfigurationParameters.VirtualNetworkSPOKE.Subnets[0].Name}"
                    }
                ],
                "ipRules": []
            },
            "Policies": {
                "Effect": "Audit"
            }
        },
        "LogAnalytics": {
            "Name": "${Parameters.InstanceName}-la",
            "Comments": "Log Analytics and Diagnostic Storage Account must be deployed in the same region",
            "ResourceGroup": "${Parameters.InstanceName}-diagnostics-rg",
            "Location": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Location}",
            "ListOfAllowedRegions": [
                "Australia Central",
                "Australia East",
                "Australia Southeast",
                "Canada Central",
                "Central India",
                "Central US",
                "East Asia",
                "East US",
                "East US 2",
                "France Central",
                "Japan East",
                "Korea Central",
                "North Europe",
                "South Central US",
                "Southeast Asia",
                "UK South",
                "West Europe",
                "West US",
                "West US 2",
                "USGov Virginia",
                "USGov Iowa",
                "USGov Arizona",
                "USGov Texas",
                "USDoD Central",
                "USDoD East"
            ]
        },
        "KeyVault": {
            "Name": "${Parameters.InstanceName}-kv",
            "ResourceGroup": "${Parameters.InstanceName}-keyvault-rg",
            "Sku": "Premium",
            "EnableVaultForDeployment": true,
            "EnableVaultForDiskEncryption": true,
            "EnableVaultForTemplateDeployment": true,
            "AccessPolicies": [
                {
                    "tenantId": "${Parameters.TenantId}",
                    "objectId": "${Parameters.ModuleConfigurationParameters.KeyVaultManagementUserId}",
                    "permissions": {
                        "certificates": [
                            "All"
                        ],
                        "keys": [
                            "All"
                        ],
                        "secrets": [
                            "All"
                        ]
                    }
                },
                {
                    "tenantId": "${Parameters.TenantId}",
                    "objectId": "${Parameters.ModuleConfigurationParameters.DevOpsServicePrincipalId}",
                    "permissions": {
                        "certificates": [
                            "All"
                        ],
                        "keys": [
                            "All"
                        ],
                        "secrets": [
                            "All"
                        ]
                    }
                }
            ],
            "SecretsObject": {
                "Comments": "Creating an object so we can use a secretsobject parameter type in our ARM template",
                "Secrets": [
                    {
                        "secretName": "admin-user",
                        "secretValue": "env(ADMIN_USER_NAME)"
                    },
                    {
                        "secretName": "admin-user-pswd",
                        "secretValue": "env(ADMIN_USER_PWD)"
                    }
                ]
            },
            "NetworkAcls": {
                "bypass": "AzureServices",
                "defaultAction": "Deny",
                "virtualNetworkRules": [
                    {
                        "subnet": "${Parameters.ModuleConfigurationParameters.VirtualNetworkSPOKE.Subnets[0].Name}"
                    }
                ],
                "ipRules": []
            }
        },
        "ArtifactsStorageAccount": "file(../_Common/artifactsStorageAccount.json)",
        "Jumpbox": {
            "ResourceGroup": "${Parameters.InstanceName}-jumpbox-rg",
            "AdminUsername": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}",
            "SubnetName": "${Parameters.ModuleConfigurationParameters.VirtualNetworkSPOKE.Subnets[0].name}",
            "StorageBlobUrl": "${Parameters.StorageBlobUrl}",
            "Windows": {
                "Comments": "Windows VM name cannot exceed 13 characters",
                "Name": "win-jb-vm",
                "VMCount": 1,
                "OSType": "Windows",
                "VMSize": "Standard_DS2_v2",
                "OSImage": {
                    "offer": "WindowsServer",
                    "publisher": "MicrosoftWindowsServer",
                    "sku": "2016-Datacenter"
                },
                "Kek": {
                    "Name": "WindowsJumpboxKey",
                    "Comments": "Destination can be HSM or Software. Use HSM to create Production keys.",
                    "Destination": "HSM"
                }
            }
        },
        "ActiveDirectory": {
            "Name": "primary-ad",
            "ResourceGroup": "${Parameters.InstanceName}-adds-rg",
            "Comments": "Windows VM name cannot exceed 13 characters.",
            "PrimaryDomainControllerIP": "172.0.0.10",
            "DomainName": "msvdcvdi.com",
            "ADSitename": "Cloud-Site",
            "CloudZone": "msvdcvdicloud.com",
            "DomainAdminUsername": "env(DOMAIN_ADMIN_USERNAME)",
            "DomainAdminPassword": {
                "keyVault": {
                    "id": "reference(KeyVault.keyVaultResourceId)"
                },
                "secretName": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[1].secretName}"
            },
            "VMSize": "Standard_DS3_v2",
            "OSImage": {
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "sku": "2016-Datacenter"
            },
            "OSType": "Windows",
            "Kek": {
                "Name": "AdKey",
                "Comments": "Destination can be HSM or Software. Use HSM to create Production keys.",
                "Destination": "HSM"
            },
            "SubnetName": "${Parameters.ModuleConfigurationParameters.VirtualNetworkSPOKE.Subnets[0].name}"
        },
        "ActiveDirectoryDomainServices": {
            "Name": "adds-vm",
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.ResourceGroup}",
            "Comments": "Windows VM name cannot exceed 13 characters. Additionally, Make sure that AddsIPAddressStart and ActiveDirectory.PrimaryDomainControllerIP are in the same subnet address prefix and they don't overlap",
            "AdminUsername": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}",
            "AdminPassword": {
                "keyVault": {
                    "id": "reference(KeyVault.keyVaultResourceId)"
                },
                "secretName": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}"
            },
            "Kek": {
                "Name": "AddsKey",
                "Comments": "Destination can be HSM or Software. Use HSM to create Production keys.",
                "Destination": "HSM"
            },
            "DomainAdminUsername": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.DomainAdminUsername}",
            "DomainAdminPassword": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.DomainAdminPassword}",
            "VMCount": 2,
            "VMSize": "Standard_DS3_v2",
            "OSType": "Windows",
            "OSImage": {
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "sku": "2016-Datacenter"
            },
            "AddsIPAddressStart": "172.0.0.20",
            "DomainName": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.DomainName}",
            "PrimaryDomainControllerIP": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.PrimaryDomainControllerIP}",
            "ADSitename": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.ADSitename}",
            "DomaincontrollerDriveLetter": "F",
            "SubnetName": "${Parameters.ModuleConfigurationParameters.VirtualNetworkSPOKE.Subnets[0].name}",
            "DataDisks": [
                {
                    "size": 127,
                    "driveLetter": "F",
                    "diskId": 2
                }
            ]
        }
    }
}
